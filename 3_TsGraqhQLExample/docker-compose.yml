version: "3.7"

services:
  db:
    image: mysql
    platform: linux/x86_64
    command: --default-authentication-plugin=mysql_native_password
    container_name: ${PROJECT_NAME}-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ALLOW_EMPTY_PASSWORD: "false"
      MYSQL_TCP_PORT: ${DB_PORT}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "0.0.0.0:${DB_PORT}:${DB_PORT}"
    networks:
      - backend_net

  cache:
    image: redis
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - cache:/data
    networks:
      - backend_net

  redis-commander:
    image: rediscommander/redis-commander
    platform: linux/x86_64
    container_name: ${PROJECT_NAME}-redis_manager
    restart: always
    networks:
      - backend_net
    depends_on:
      - cache
    environment:
      REDIS_HOST: cache
      REDIS_HOSTS: local:cache:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "${REDIS_MANAGER_UI:-8081}:8081"

  api:
    image: ${PROJECT_NAME}-api
    container_name: ${PROJECT_NAME}-api
    build:
      context: ./
      dockerfile: Dockerfile.development
    tty: true
    environment:
      NODE_ENV: development
      ENVIRONMENT: development
      FORCE_COLOR: 1
    restart: always
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - ./src:/api/src
    networks:
      - backend_net
    ports:
      - "${API_PORT}:${API_PORT}"

volumes:
  mysql_data:
  cache:

networks:
  backend_net:
    driver: bridge
